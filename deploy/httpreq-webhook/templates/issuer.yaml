{{- range $issuer := .Values.issuers }}
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: {{ required "issuer.name is required" $issuer.name }}
  namespace: {{ $issuer.namespace | default $.Release.Namespace }}
spec:
  acme:
    email: {{ required "issuer.email is required" $issuer.email }}
    server: {{ required "issuer.acmeServer is required" $issuer.acmeServer }}
    privateKeySecretRef:
      name: {{ $issuer.privateKeySecret | default (printf "%s-%s" $issuer.name "acme-key") }}
    solvers:
    - dns01:
        webhook:
          groupName: {{ $.Values.groupName }}
          solverName: httpreq
          config:
            endpoint: {{ required "issuer.endpoint is required" $issuer.endpoint }}
            {{- if $issuer.headersSecretRef }}
            headerSecretRef:
              name: {{ $issuer.headersSecretRef.name }}
              namespace: {{ $issuer.headersSecretRef.namespace }}
            {{- end }}
{{- end }}
{{- range $clusterIssuer := .Values.clusterIssuers }}
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: {{ required "clusterIssuer.name is required" $clusterIssuer.name }}
spec:
  acme:
    email: {{ required "clusterIssuer.email is required" $clusterIssuer.email }}
    server: {{ required "clusterIssuer.acmeServer is required" $clusterIssuer.acmeServer }}
    privateKeySecretRef:
      name: {{ $clusterIssuer.privateKeySecret | default (printf "%s-%s" $clusterIssuer.name "acme-key") }}
    solvers:
    - dns01:
        webhook:
          groupName: {{ $.Values.groupName }}
          solverName: httpreq
          config:
            endpoint: {{ required "clusterIssuer.endpoint is required" $clusterIssuer.endpoint }}
            {{- if $clusterIssuer.headersSecretRef }}
            headerSecretRef:
              name: {{ $clusterIssuer.headersSecretRef.name }}
              namespace: {{ $clusterIssuer.headersSecretRef.namespace }}
            {{- end }}
{{- end }}
